Interview #3 2022-04-05 14:00 
Exclusion criterias:
* Interviewer describing the project


FUNKY: B D C E A (Good order, start light)


RAINBOW: C A D E B (Green, Yellow, Orange, Red, Black)
“E and B could be switched”


Music: 2 5 4 3 1


[T:FREEZE_NAME-UNCLEAR] [00:00:47] The first thing that comes to mind is the freeze/unfreeze. So, um, what's a little bit confusing. First time I saw it, maybe you're referring to “pause” . I think is the English word you were looking for was not, [00:01:00] 
[T:ROOM-PACKAGE_STRUCTURE] [T:MONSTERS-ARE_ISSUES] [00:01:46] so each one of these is just a directory to go into, and then you find a code that has issues, but I'm assuming you’ll find enemies. Then you would have to fight.  When I saw the email from this, I was curious as to how you guys were actually going to take that kind of abstract metric code smell and make it into an interactive sort of experience. 
[Interviewer] What do you think about this room actually? *Player in a perfect room*
[T:PERFECT_ROOM_PERFECT_CODE] [Interviewee] [00:02:22] Well, it must be really well programmed. Cause I mean, there's no enemies, nothing to signify that it's bad. [T:MUSIC-IS_DANGER] The music has a slow, relaxed play. So I assume that means there's nothing really to worry about.
[T:PERFECT_ROOM_PERFECT_CODE] [00:02:43] Anything I'm trying to find one that has the bug. So I'm assuming that from this, that there's very little to no code smell in this project. [00:02:59] It's an excellent [00:03:00] project.
[00:03:07] [Interviewer] You can go back to project selection by pressing escape.
[00:03:30] [Interviewee] *Browse a bit*
[T:FIRST_ACTION-BROWSING] [T:RECOMMENDED-UNNOTICED] [Interviewer] You can pick the recommended one. [Interviewee] Which one? [Interviewer] Brave [Interviewee] Oh ok, yes make sense *Go to brave project* okay. 
[T:CODE_SMELLS-RECALLED] So there's clearly a bit more of a code smell here.
[T:MONSTER_NUMBER-ADD_SUBDIRECTORIES] [00:03:57] so when that's going to be worse, because there's two files that are providing [00:04:00] code smells. The ones not providing smells are fine.
[00:04:17] [Interviewer] What elements make you think that? 
[T:MONSTER_SIZE-INTUITIVE] [Interviewee] The number of enemies and then also their physical sides. Um, I mean, just implicitly, I think it's natural for me anyway, to assume that the bigger enemies are tougher, more of a threat. So I'm seeing more enemies or larger enemies suggest that those ones are stronger code smell problems.
[T:DILEMMA_TOOL-IT_IS] [00:04:57] So this is more than a visualization tool to [00:05:00] kind of see which ones are perhaps worse. [00:05:10] 
[T:GOAL-FIND_WORSE_FILE] Like which one of your files has a worse smell than the others. Um, I feel like it's impressive and sort of like, uh, it provides intuitive feedback that I can, I can go around and defeat the enemies. And when they respawn, they'll continuously respawn where they originally were or an equivalent one. 
[T:DILEMMA_TOOL-MORE_INFORMATIVE] But I feel like [00:05:32] as a tool, it seems to be lacking a bit more informative side. 
[T:TILE_NUMBER-CONFUSING] So like the zero out of one and the zero out of two written on the ground, I'm not a hundred percent sure as to where those metrics are. 
[T:TILE_NUMBER-EMPIRICAL_DEDUCTION] *Enter a file with 10 issues* Okay, it's the number of enemies.
[00:05:55] But then again, like in a file, like you have one spot over here. But here *Player in a very big room 15+ files* you have a multitude of files and it's not until you actually go and stand on them and you can actually see what file it currently is to see sort of the metric that is being in. Like beyond that, being able to tell that, you know, 0 out of 11, that must have more code smell than say this one 0 out of 2.
[T:CODEBASE_UNKNOWN-FILE_STRUCTURE_UNKNOWN] [00:06:20] But it's not my code base, so it's a little harder to kind of see which file is what. 
And then also I'm not overly familiar with the actual metrics used to measure those values. 
[T:TILE_NUMBER-CONFUSING_COMPARABILITY] So zero out of 11 is in comparison to zero out of two, if it's measuring similar things. And technical debt, code smells, what are the other metrics to follow the code. [00:06:43] It's a little unclear.
[Interviewer] Do you think the colors have any meaning? 
[T:MONSTER_NUMBER-INTUITIVE] [Interviewee] [00:07:00] I presume there is one, it's not quite as implicit as the enemies. I mean, the number of enemies is a numerical value of a very direct correlationship. 
[T:COLORS-GENERAL_QUALITY] Maybe it's like a sort of sense as to whether it's good or bad, but then the scale isn't explicitly stated, same for color. 
*Dig and go up to different files* Same color, so [00:07:42] maybe it's the file size.
[00:07:46] [Interviewer] Actually if you press X there is more information. 
[T:FREEZE_INFORMATION-USEFUL] [Interviewee] The reliability, bugs, cracks, maintainability. Oh, interesting. [00:08:02] Oh, smells, bugs and vulnerabilities. Oh, that's fantastic. It makes more sense.
[T:MAINTAINABILITY_METRIC-CRACKS_NOT_FOUND] [00:08:29] Where are the cracks being shown? Cause I see the ground piles. I see the walls. But the cracks representing the maintainability code smells.
[T:MAINTAINABILITY_METRIC-NOT_INTUITIVE] [00:08:41] Is that supposed to be the border around the, like the next tile down? Or maybe the lines between the tiles? [00:08:55] [Interviewer] So the cracks are confusing you? [Interviewee] [00:09:00] Yeah. Like visually where they're supposed to be represented. Is this supposed to be like between the tiles?
[T:FIXING-FOR_MY_PROJECT] [Interviewer] Do you think playing through can make you motivated to fix code smells? If it is your project? [Interviewee] Yeah. If it was my project, I feel like I would be a lot more just intuitively knowing which files were which, not having to run over me. Okay. Well, I remember the directory for my project and this is the layout of the games space relating to my project. And then I could see the enemies and everything. 
[T:ENEMY_TYPE-DIFFERENTIABLE] [00:09:58] And I would know implicitly, I mean the code smell and bugs and vulnerabilities they're drastically different. So it would be intuitively pretty easy to see that here, there's a fair bit of code smell, but if there's no real bugs, there's no real vulnerability showing maybe some minor ones.
[T:RELIABILITY_METRIC-NOTICED] [T:SECURITY_METRIC-NOTICED] [T:MAINTAINABILITY_METRIC-NOT_INTUITIVE] [00:10:16] It's a little harder to tell you there, but, uh, everything else suggests, um, security wise. Reliability wise. And then the code smell is the one that's actually not showing up somewhat. But again, I'm not a hundred percent sure where that's supposed to be showing up. But everything else is going to ground tiles, the reliability and the vulnerabilities suggest that the code is fine in those regards.[00:11:00] 
[T:MAINTAINABILITY_METRIC-CRACKS_NOT_FOUND] [00:11:40] So I get the cracks must be the perimeter around the sub-directories. In sort of representing the code smells.[00:12:00] 
[T:GOAL-FIND_WORSE_FILE] [00:12:07] It's more like you're saying it's significantly more interesting to me to have this or gain space set up to go through all my files and see like, oh yeah, I got some bugs, some code smells here and then going through. And then when I go to see the actual metrics, the numerical data, I'll have more of an implicit understanding and be like, right. [00:12:27] I remember seeing a lot of bugs in that file. So that's where I should look for bugs. And I feel like that is really well done here and like having the color scheme, the enemy types, just all of that implicitly stated and such significant contrast between them really lends itself to let you see kind of the intensity of each bug or code smell or any of those and then being able to go in and see it kind of where everything's originating from go deeper and deeper into the files. [00:13:00] It's just wonderful. 
[T:COMBAT-CANT_WIN] [Interviewer] And when you think about combat? [Interviewee] [00:13:09] I feel like it's, it's sort of a, [00:13:15] it's a little bit kind of, it's a nice metric to have a little bit of interactivity, but I feel like when you get to locations, like the very first one in the brave project, this is where I started. Yeah, it’s just sort of, they all kind of waggle towards me. It's excellent that they're slower than you, but at the same time, it's a little bit overwhelming.
[T:DAMAGE_DEALT-LOW] [T:COMBAT-PACE_OVERWHELMING] [00:13:35] I can't really stop and take a look at where everything's coming from until actually early notice. And even then the damage doesn't really seem to destroy all of them all at once. So, I mean, now we're going to talk left is just continuously skewing through a multitude of enemies funding, and then you restart and them, it's the same kind of thing [00:14:00] before I can even start to kind of understand and see what the problems are with the code base.
[T:GOAL-FUN] [00:14:05] I have to kind of play the game first to kind of clear all of that. And I mean, it's a fun little thing, but I mean, if I was trying to fix the bug, and that was my main purpose in using this tool, the combat would slow me down. 
[T:ATTACK_SPEED-LOW] [T:DAMAGE_DEALT-LOW] Like there's, there's a significant delay between attacks. So, I mean, like increasing the damage that they do or allowing me to kind of like spam it, just to clear out all the enemies and [T:EXPLORING-HARD_WHEN_MONSTERS] then be able to move on the actual file might be the actual act of using the software a little more. [00:14:39] Um, effective perhaps. Because, it feels a little bit like a game. It feels a little more slower and cumbersome than what I would want in the middle of debugging or trying to optimize. But I mean, the representation and then the mechanics are just, [00:15:00] it's a lovely build game.
[00:15:07] [Interviewer] Actually in the freeze mode you can hover on things.
[T:MOUSE-USEFUL] [T:GOAL-COULD_BE_AN_OUTLET] [T:FREEZE_FREEZE-USEFUL_TO_LOOK_AROUND] [Interviewee] You can move around, that’s fantastic.*Moving around the camera* 308, waoh.[00:15:41] Yeah. So like, that's fantastic. And then you have the little game that if you're like, oh my God, I have so many bugs to deal with. Then you have that kind of cathartic[1] being able to actually go around and attack the bugs and code smells, and everything. That's really cool having that in there where it freezes the [00:16:00] game and lets you kind of peruse at your leisure and kind of see, and just go across and then having an option to unpause and having enemies to spawn and fight, yeah it's fantastic.
[T:MOUSE-NOT_FOUND] [T:FILE_NAME_INDICATOR-NOTICED] [00:16:14] [Interviewer] You didn't think you were able to use the mouse? [Interviewee] Yeah, I wasn't aware that that was an option, like for my understanding in order to see what file was I had to read up on the top left there and actually be standing on the file where path is written. Okay. 
[T:MOUSE-USEFUL] [T:FREEZE_FREEZE-USEFUL_TO_LOOK_AROUND] But being able to actually just pause the game and look around and then, you know, once I kind of find the file, I don't have to find a way to fight my way through it and get through the file. [00:16:40] Like. And that'll take me down and keep it paused. And then I can kind of continuously rehearse down to find the root cause of the issue.
[00:17:03] [Interviewer] Would you use this tool in your everyday life? If so or not, how?
[T:GOAL-NUMERICS_SUMMARY] [T:GOAL-IMPLICIT_FEEDBACK]  [T:GOAL-SATISFYING] [00:17:15] I think I would, um, just because like we discussed previously, it provides that implicit feedback and it provides a nice summary of all the numerical metrics, but in a more [00:17:31] satisfying sort of way. 
[T:GOAL-SATISFYING_COLORS] [T:GOAL-SATISFYING_INTERACTIVITY] [T:GOAL-SATISFYING_MUSICS] Instead of just having here's a number and here’s what it signifies. Here there’s the colors, there's the interactivity, there's music. 
[T:GOAL-IMPLICIT_FEEDBACK] Everything kind of works together to provide that implicit feedback.
[T:GOAL-FIND_WORSE_FILE] To let me know where the problems are in my code and know if I want to make the most change in the shortest amount of time. I can easily use this to see the files and then go into which ones have the biggest value [00:18:00] metric, the worst metric and fix them. 
[T:FREQUENCY-AGILE] [Interviewer] When would you use it? Is it something like you use every day while you are working or at some point of the lifetime of a project? [Interviewee] I can see your game being implemented really well for larger projects where you have a multitude of developers for different parts of code and say now once a week everybody stopped.
[T:SCENARIO-DEBT_FIGHT_ENGAGEMENT] [00:18:31] Plays the game to kind of review code smells and optimize some of the work they had done previously. Sort of like maintaining the maintainability in your code as they go.
[T:SCENARIO-PEOPLE_PERFORMANCE_TRACKING] [T:JUNIOR_DEV-HIGH] Maybe even for newer developers to see their contributions and how they compare to other people. [T:GOAL-FUN] So it's like, well, here's the fun part [00:18:46] which is ramping into code smell and bugs and vulnerabilities. And then here's what the senior developers did. Right. And then you would have that, that implicit kind of feedback and then give you where they're going wrong from their code. It's also kind of a fun kind of metric. 
[T:THREAT-BAD_CODE_ON_PURPOSE]I mean, the only risk I could see is if somebody's enjoying the game too much, then they wouldn't be, you know, purposely make bad code to have a harder challenge, but [00:19:17] I feel that's a minor side effect,
[00:19:23] [Interviewer] Who would you see playing this game? Do you think students, teachers, managers, software developers.
[T:DEV-HIGH] [00:19:39]  [Interviewee] I feel like you can't get into computers without a bit of fascination and enjoyment to be video games in some regard. So I feel like anybody that actually does coding would find this enjoyable. 
[T:MANAGER-HIGH] Um, I could see managers doing that to kind of track who's doing what.
[T:JUNIOR_DEV-HIGH] [00:19:59] Um, [00:20:00] junior developers like previously mentioned are supposed to be able to see how bad their files are relative to other files and could be using it to help them kind of learn and see their mistakes. 
[T:TEAM-POSITIVE] And then yeah, being able to see where teams should focus through software, reduce code smell, improve maintainability quickly and at a glance without having to scroll through 400 cells in an Excel.
[T:LEARNING_CURVE-MEDIUM] [00:20:34] [Interviewer] Did you feel overwhelmed by the information? Or was it fine. [Interviewee] Oh, there's a bit of a learning curve. Understanding what the different colors meant, what the numbers meant and what the monsters meant, but it was more just, I didn't freeze the game and see all the information that is written here.
[T:LEGEND_SCALE_DIRECTION-NOT_INTUITIVE] [T:LEGEND_SCALE_DIRECTION-LEFT_TO_RIGHT] [T:LEGEND_SCALE_DIRECTION-EMPIRICAL_DEDUCTION] [00:20:57] Uh, and then also like there is a scale, but it depends on like, what's good and what's bad. Right? I mean, I can kind of infer that from playing the game, obviously this one's darker is worse because of the number of enemies that were spawning. So that kind of answers my question.
[T:MAINTAINABILITY_METRIC-CRACKS_NOT_FOUND] [00:21:17] And then again, the whole cracks representing the maintainability and the code smells quite sure where that's supposed to be visualized. 
[T:A_E-INTERESTING] And then the dig up, dig down, um, where an interesting mechanic. 
[T:MOUSE-USEFUL] Being able to freeze it like this and just use the mouse to implicitly go through everything and still have that calling from feedback. 
[00:21:41] Um, no, I didn't feel overwhelmed when I first started. Yeah. Yeah, but it was, I felt it was more digestible, you know, someone dropping a spreadsheet in front of me and saying: “here you find where the problems are.” It's like, well, I'm going to go on break.
[00:22:09] What did you like or dislike about the game?
[00:22:17] Uh, I mean some minor tweaks about the gameplay aspect of it. 
[T:FREEZE_INFORMATION-USEFUL] Um, otherwise I think that when you guys haven't set up or everything is showing the metrics and everything is really nice. 
[T:FILE_SIZE-ADD_MAPPING]Uh, maybe on, this is sort of just a minor thing, but obviously some of these files are going to be significantly larger than others. [00:22:39] So maybe have that, um, represented in the game space. How you would do that I'm not quite sure, but being able to see like, well, if I go into here, that's a massive file versus that one there's only like a small number of lines or something. So maybe having that aspect implemented as well as then [00:23:00] it would be that extra level in place that when you tell somebody this is a massive file.
[00:23:13] And I think it's wonderful. Fantastic.
[T:ATTACK_SPEED-LOW] [T:DAMAGE_DEALT-LOW] [00:23:22] [Interviewer] You talked about some tweaks? [Interviewee] uh, just maybe the, uh, tweaking the damage and the latency between attacks just for the actual gameplay wise of it. 
[T:GOAL-COULD_BE_AN_OUTLET] Um, I feel like if you're using this tool and you have an overwhelming amount of issues in your code, you want that kind of cathartic. You just want to obliterate through the enemies. And then get to figuring out where the problems are.
[T:ATTACK_SPEED-LOW] [00:23:43] Whereas now there's a, like I said, the attack. There's just a lot of time between them. So, I mean, it's still fun to smash the bugs, but it’s not as cathartic as if you just go around killing them all and have your vengeance.
________________
[1] providing psychological relief through the open expression of strong emotions; causing catharsis.
"crying is a cathartic release"