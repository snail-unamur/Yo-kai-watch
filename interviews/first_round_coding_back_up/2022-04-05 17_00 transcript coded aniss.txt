Interview #4 2022-04-05 17:00 
[00:00:00] B D C E A. 
[00:00:18] B E A D C
[00:02:50] 2 5 4 1 3
[T:CONTROLS-INTUITIVE] [00:06:04] *Trying controls: moving, attacking, digging, map* It’s pretty good. [00:06:15] Easy to understand.
*Exit tutorial by digging, seems on purpose*
[T:RECOMMENDED-UNNOTICED] [00:06:26] Should I search for a project? [Interviewer] You can just use the recommended one brief one time. That's fine.
[Interviewee] *Go to Brave project* 
[00:06:40] [Interviewer] At any time, if you need to go back to the tutorial, you can press escape.[00:07:00] Don't hesitate to tell me what comes to your mind while you are playing.
[T:MONSTERS-NOT_INTUITIVE] [Interviewee] Yeah, so I get a concept of like, there are monsters and I have to slash them. But I don’t get what the monsters are and how that relates to code quality.
[T:FREEZE_KEY-HARD_MISSED] [T:FREEZE_INFORMATION-USEFUL] [T:MONSTERS-ARE_ISSUES] [00:07:43] [Interviewer] Maybe you can press X, I think you missed it in the tutorial. [Interviewee] *Reading information panel in freeze mode* So there are bugs, smells. *Go back to Brave first room and fight*
[T:VULNS-NOTICED] [T:CODE_SMELLS-NOTICED] [T:BUGS-NOTICED] [00:08:35] I see that there are a lot of code smells, not bugs, not vulnerabilities. And, uh, I think that was pretty good. 
[T:FREEZE_INFORMATION-USEFUL] [T:MONSTER_NUMBER-INTUITIVE]It gave me a good understanding of how bad it is. How many code smells. The monsters represent the vulnerabilities, bugs and code smells. 
[T:FUNKY-BAD] [T:FUNKY-NOT_INTUITIVE] I think this is helpful, but the color seems a bit too identical.
[00:09:10] Maybe having something like different colors could help. Let's say for bugs, yellow to dark yellow. And the code smells something like a green color, light green to dark green. So it would be easier for me to identify it because like, if I'm new to this game, uh, just now when I was doing the math, I can't really identify, if it is, let’s say a code smells or bugs house? 
[T:RELIABILITY_METRIC-INTUITIVE] Yeah. So if I see a dark purple, I see that it is different but I forget what it is, I just know that it is something bad. [00:10:00] 
[00:10:11] [Interviewer] Right now. Do you feel overwhelmed by the information in the game? For example, like too much information or too little. Or the information is too complex. 
[T:SUB_ROOM-IS_VULNERABILITY] [Interviewee] Okay. Now I'm finding something new. So I'm assuming, this block *Stepping on perfect sub-directory* *Turn on freeze and try to find out what it is* is actually, it's a vulnerability. *Players digs in* It points me there, then I can dig deeper *Dig again* and *Player is in a file* then I can find the vulnerability or the source of the issue. 
[00:10:50] I’m not sure, is that a correct thought process, but it's how I get it.
[T:SUB_ROOM-IS_VULNERABILITY] [T:SUB_ROOM-IS_BUG] [00:11:08] [Interviewer] Okay. I get what you mean. So you, you are not sure about what the tiles on the floor represent, the squares. [Interviewee] Yeah. So I think this tile this square tiles *Talking about sub-directories in a room* is a vulnerability or maybe a bug.
[T:VULNS-IS_WALL] [T:BUGS-IS_GROUND] [00:11:33] Okay. Yeah. Okay. So the walls on top signify vulnerability.
[T:SUB_ROOM-IS_BUG] [00:11:42] And the square on the ground is a bug, so if I dig into it, I might find a bug.
[Interviewer] Actually here, you are browsing directories and files. So the squares on the floor are either directories or files. And when you dig into one, you go into this file or directory?
[00:12:16] [Interviewee] So are they supposed to tell me which files and which directories have issues, bugs or code smells.
[T:MAP_KEY-NOT_FOUND] [00:12:30] [Interviewer] Yeah, actually. Yeah. And you can also use the map if you want to navigate. [Interviewee] Which map? [Interviewer] The map using the tab key. [Interviewee] Oh. okay. [00:13:00] 
[T:VOLUME-TOO_LOUD] [T:VOLUME-NOT_MODIFIABLE] [00:13:14] [Interviewer] What do you think? What are you thinking? [Interviewee] Um, let me go back here. Is there a way to decrease this music? [Interviewer] Okay. It's maybe a bit loud. I'm not sure because if you decrease the sound of your browser, it would maybe decrease mine too, so, okay. [Interviewee] I am fine. So previously when we were on the main floor.
[T:SUB_ROOM-CONFUSING] [00:13:43] How I see it is, all these little tiles, is a bug. I didn't think of it as a file or a directory. So once I jumped into this spot here and. [00:14:00] When you tell me if I can click on the map, I can find all the different files in this folder, in this directory, which I think is starting to make sense.
[T:TUTORIAL-MISSING_TILE_INFORMATION] [00:14:13] So, uh, when we get back, here *in the main room*, we should do a quick tutorial or something like that to say all these tiles represent directories. 
[T:RELIABILITY_METRIC-NOTICED] *Enter dark purple room with 2 bugs* Anh. Ok. Yeah. Okay. I notice that this file or this directory have some extra bugs *Turn on freeze* *Struggled a bit to see which one it is*. Or monsters. So that means something is happening here.
[00:15:38] [Interviewer] What do you think about the combat aspects of the game? Like fighting the monsters? How do you feel?
[T:CODE_SMELLS-NOTICED] [T:BUGS-NOTICED] [00:15:50] [Interviewee] I think the combat was good in terms of seeing what is the main problem, but I can tell if it is [00:16:00] code smells, code smells is the real problem that we need to solve in this repos. And it doesn't seem to have any bugs, maybe a little bit
[T:VULNS-NOTICED] [00:16:12] but no vulnerabilities then, I’ve never seen any red colored monsters. In terms of fighting it. Uh, the operation was pretty simple, 
[T:COMBAT-NO_LESSON] but I, I don't understand, like, why do I need to combat it? Because like, if I go back to you, the ones that spawn, I can just run away *Dig into a file*, I'm not sure why I need to combat and what happens if I die. 
[Interviewer] You can't figure out what would be the goal of fighting the monsters?
[T:COMBAT-NO_LESSON] [T:EXPLORING-HARD_WHEN_MONSTERS] [00:16:46] [Interviewee] Well, yeah. What would be the goal of fighting? I understand in real life why fighting code smells. Maybe just to understand where the code smells come from? Probably the reason is that there's too many code smells, [00:17:12] then I don't have the time, like you see, there are too many monsters 
[T:MOUSE-NOT_FOUND] [00:17:23] [Interviewer] Okay. I get it. Like you can actually press X to freeze time. And once the time is frozen, you can click on a square and you will be able to go inside. And if you right click you go back basically, and you can navigate like that without the monsters popping.
[T:MOUSE-NOT_FOUND] [00:17:53] [Interviewee] Yeah. I was just using the keyboard. I didn't know I could use the mouse. [Interviewer] And when you unfreeze the most responsibilities. [Interviewee] Yeah. Um, Okay. Now it makes sense. Do you think, I dunno for me, uh, I'm not quite familiar with this, but I feel like if this little tile shows up… 
[T:FILE_HOVER-INTUITIVE] *Hover on tiles and see the tooltip* So this is the name of the file. *Open map and try to find the file*
[00:18:54] [Interviewer] You can even move around while in freeze mode using a [00:19:00] W A S D.
[00:19:06] [Interviewee] I guess moving my screen.
[T:TILE_NUMBER-INTUITIVE] [00:19:15] I guess this number on the tile on the ground is telling me the number of issues. [00:19:34] *Hover a file with 142 issues* It's telling me there's a lot of [00:19:39] bugs in the file named “settings”.
[T:TILE_NUMBER-INTUITIVE] [T:TILE_NUMBER-EMPIRICAL_DEDUCTION] *Hover a file with 0 issue* So this one has no bugs.*Hover a file with 2 issues* So this file has two bugs. [00:19:58] all right. [00:20:00] Cool. Now it makes sense I can find a way where the bugs come from. So how do I actually clean it? *Unfreeze and kill the monsters*
[00:20:31] [Interviewer] Do you understand the meaning of the colors used in the rooms? Basically what do you think this room specifically tries to tell you about the code quality? 
[T:ROOM-PACKAGE_STRUCTURE] [Interviewee] Yeah. Um, I guess *In the root room of Brave* I can understand this as a box room and then in each folders *Showing with the mouse sub-directories on the ground* that is showing [00:21:00] how bad this is. How many bugs there are inside this specific file. 
[T:PERFECT_ROOM_PERFECT_CODE] [00:21:08] I can go inside. *Click to dig in the file* And I can see the background is the severity and I realized that there are different policies. This is a JS file which is fine *Perfect file*. 
[T:RELIABILITY_METRIC-NOTICED] I have to look into this before *Looking at a file with a darker ground*. So it is more serious. Yeah.
[T:LEGEND_SCALE_DIRECTION-LEFT_TO_RIGHT] [T:LEGEND_SCALE_DIRECTION-NOT_INTUITIVE] [00:21:28] I personally would prefer the less severe colors to be on the left *Showing in the freeze mode the ground colors*. So it goes through them, right?
[00:21:46] Yeah. I — different themes for the bugs, smells and vulnerabilities because I feel like everything is the same. It's very hard to tell. 
[00:22:08] [Interviewer] When you are playing and fighting these monsters and you're just seeing the game, do you feel motivated to fix technical bets, if this was your project? If it was your project and you're playing on your project, would you feel motivated to fix the bugs, fix the technical debt because of the game?
[00:22:34] [Interviewee] Um, I mean, to be honest, I would feel more motivated in some sort of —. *In root* Let’s say here. Which folder you want to tackle. And then I say, I want to tackle this then I click on it *Going into the file*. It would say there are 50 bugs and 2 code smells or whatever. And then I would try to fight here thinking “ok there are only 2 bugs” *Player actually fight the monsters*.
[T:INSTANT_FEEDBACK_FIXING-MISSING] [00:23:18] Okay. And then now I would go in the real code and fix this. And then I should see this clearly. Maybe something as a task list, somewhere in the top left corner. Now I'm going to fight in this room. And then I go in and actually fix the bugs. I come back here and then it synchronizes and says, okay, now that's fixed. Kind of real time, like you're fixing it in the code and they disappear in the game.
[T:COMBAT-NO_LESSON] [00:23:52] Like you could see “one hour ago the code had 2 bugs but now it is gone” [00:24:00]. Not just like killing it and then they’ll spawn later. So I think that way would be better. It would be like, where do I start from. I guess you go to random rooms and then if I go to random rooms.
[T:INSTANT_FEEDBACK_FIXING-MISSING] [00:24:19] *Enter “script” folder in brave, a big room with 20+ sub-directories and B reliability* Maybe this room has a lot of things. Yeah. I think having something like a goal, a tasklist or some sort of light level objectives would be easier for me to try and keep track of what I want to do.
[00:24:42] [Interviewer] You were describing a bit like how you would use it. So would you actually use this game in your everyday life as a developer? What are your thoughts?
[T:SCENARIO-DEBT_FIGHT_ENGAGEMENT] [T:FREQUENCY-DAY_TO_DAY] [00:24:58] [Interviewee] I actually [00:25:00] thing, yeah, I would prefer to see at least a number. I would prefer to see this instead of just numbers. Maybe it will be good if we have a sort of dashboard, uh not dashboard, [00:25:18] at least one number saying how many bugs and code smells are here. And then I'll be like, okay, today I'm going to fix this first tile *By tile the participant is referring to subdirectory here*. So I set my goal to be this tile and then I go inside here *Here is the dir “chromium_src”* and I'll be like, okay, that's 11. I’m going to take all this 11. In the next one hour, I am going to clear this little tile, I clear it and it pops up somewhere here *Pointing with the mouse the bottom right corner*.
[00:25:43] But yeah, I think this is quite a cool concept. Because I remember in the past there's once we had a project that had 700 code smells. And then [00:26:00] we had — just to scroll through the lines and it was just, uh, uhm, annoying.
[00:26:08] Yeah, it's interesting. Okay. 
[Interviewer] That's an interesting way of using it. Um, do you think that anyone else would be playing this game? Like, do you think anyone else should be playing this game actually, any other role in the industry?
[T:SOLUTION_ARCHITECT-POSITIVE] [T:SCENARIO-MANAGEMENT] [00:26:36]  [Interviewee] I think for someone at a higher level like a solution architect. They would just look at this and they might go into that room and be like: “Oh there are actually bugs on code smells, um, very serious problems in this specific folder.” Then they would just tell the developer to do it. 
[T:CODER-POSITIVE] [00:27:00] And, but actually only dev *Not sure he said “dev”*, but should be playing or working on this. I feel, yeah, because the person that plays this game should have a reasonable understanding of the repos and the directories or else they would be like, um, I don't know what this file is, it is just a file. It doesn't mean anything to me. But if I implemented this file a couple of days ago, and now I see that there are actually some code smells in this. I'm going to fix that.
[00:27:35] Okay. The last questions. Um, what are your, your more general thoughts, like? What did you like about the game or what did you dislike?[00:28:00] 
[T:FUNKY-BAD] [00:28:00] I think the color scheme it’s a bit unclear for me. And I guess I understand why you guys keep everything under the same kind of color. So it would be like, you can tell immediately, is it a very serious thing or is it not serious. 
But — — — —.
[T:FUNKY-BAD] [T:MUSIC-TOO_NERVOUS][a][b][c] [00:28:30] Maybe like light green to dark green for the walls and light yellow to dark yellow for the ground or something like that to really see the difference. So I will know immediately that some vulnerabilities come from the wall, instead of like, everything looks purple to me, I can’t just focus on everything. That’s the first thing, the second is definitely the music. [00:28:59] Cause like I would prefer some swing music not like blasting.
[T:FILE_NAME_INDICATOR-MISSED] [00:29:09] The interface looks great. Oh, one thing maybe when I come into this room. [00:29:18] Maybe you should name the folder or file somewhere on top label *Pointing with the mouse on top of the room, outside it*. *Hover subdirectories* So now I can see this is  “python_modules”. And then this is another folder. Now I can go into the map *Go in the map* and I can see “chromium_src”. So maybe you can put a label on top. So I know which one is.
[00:29:40] [Interviewer] Actually, there is a label just, uh, under the health bar, like the three hearts, but then maybe we could move it. 
[Interviewee] Um, yeah. Okay. And, uh, I realized something just now. This label will show me details when someone is coming to me. *Go in a room with monster* Like when I go in here, there'll be someone.
[T:FILE_NAME_INDICATOR-NOT_INTUITIVE] [T:FILE_NAME_INDICATOR-DISCRETE] [00:30:10] [Interviewer] Uh, yeah, no, it's when you are walking on a square it will tell you what's the square without you clicking it. 
[00:30:22] [Interviewer] Okay. All right.
[00:30:25] Maybe the labeling can be a bit more informative. This label is about this square and this one about the whole folder.
I'm just curious, like, how does this link up to, um, to the actual repos? [00:30:59] Is it [00:31:00] you have to like upload your files, get put somewhere. Oh, uh, okay. Yeah, actually we are using SonarCloud API. So basically we are connected to that API and we have access to all the public, uh, open source projects they have. And, uh, when you select a project, we actually download all the issues, uh, of that project.
[00:31:25] And then we have a JSON that we are using.
So if I go to projects and I can, this is all the projects you have downloaded? 
[Interviewer] Oh no. Yeah. We've ABC. Like you can, there is a search bar at the top and you can look for any project they have. 
[Interviewee] Yeah. I was just thinking because this is not my project, so I don't really feel super motivated when I look into this.
[00:31:53] But of course I was thinking if I could somehow put a template [00:32:00] or some symbols folders and it can run in this game and then I would feel more relatable to the game. *The player is asking if it would be possible to try on one of their project from a folder of the project*
[Interviewer] Yeah. Yeah. Of course. The end goal is of course, to let the user actually use one of their projects because otherwise it wouldn't be very useful.
[00:32:23] [Interviewee] Uh, okay. So. Yeah, I do think it's possible for me to like, give you like the templates, all the folders, and then you can, uh, somehow upload it, upload to here and then I can test it out. 
[Interviewer] Um, right now we can’t because we only have coded it to work with SonarCloud. So if you have a project on SonarCloud that is public, you should be able to find it.
[00:32:54] [Interviewee] Uh, I think I have a project on SonarCloud, but I'm not sure if I set it to public yet and look into [00:33:00] that. Yeah. You can just type the name of the project or your organization, and maybe it should work.
[Interviewee] I forget what the name is, maybe I will have to look at it later. 
[Interviewer] Yeah. Yeah, of course. I think you can actually like, uh, just to go back to this website at any time if you want to have fun with it or.
[00:33:24] [Interviewee] Okay. So I just have to make that project to be public and then I can just search it up?
[Interviewer] Yes and it must have at least been analyzed once by SonarCloud. It must have generated all the issues and then you should be able to find it.


[a]+1
[b]Better que "MUSIC-NOT_LIKED"
[c]Yes